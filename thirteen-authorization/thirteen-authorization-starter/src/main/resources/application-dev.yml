# 服务器
server:
  # 端口
  port: 8770

# spring cloud 配置
eureka:
  instance:
    # 心跳间隔（秒），默认30s
    leaseRenewalIntervalInSeconds: 30
    # 失效时间，默认90s，如果服务在指定的 失效时间 内仍没有发起心跳请求，将会被剔除EurekaServer
    leaseExpirationDurationInSeconds: 90
    # 实例名称显示IP配置（与instance-id配合使用）
    # prefer-ip-address: true
    # instance-id: http://localhost:8764/rental  # 将InstanceID设置为 IP:Port 形式
  client:
    serviceUrl:
      # 设置与Eureka Server交互的地址，默认为http://localhost:8761/eureka，多个地址用逗号（,）分隔
      defaultZone: http://localhost:8761/eureka/

# spring 配置
spring:
  # redis 配置
  redis:
    # 地址
    host: 127.0.0.1
    # 端口
    port: 6379
    # 密码
    # password:
    jedis:
      pool:
        # 最大空闲连接数
        max-idle: 30
        # 最大连接数
        max-active: 100
        # 获取连接时的最大等待毫秒数(如果设置为阻塞时BlockWhenExhausted),如果超时就抛异常, 小于零:阻塞不确定的时间,  默认-1
        max-wait: -1ms
    # 超时时间
    timeout: 100000ms
  # 数据源配置
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    jdbc-url: jdbc:mysql://127.0.0.1:3306/thirteen?autoReconnect=true
      &useUnicode=true
      &createDatabaseIfNotExist=true
      &characterEncoding=utf8
      &allowMultiQueries=true
      &useSSL=false
      &failOverReadOnly=false
      &serverTimezone=CTT
    username: root
    password: 123456
    # hikari数据库连接池
    hikari:
      pool-name: Auth_HikariCP
      # 最小空闲连接数量
      minimum-idle: 5
      # 空闲连接存活最大时间，默认600000（10分钟）
      idle-timeout: 180000
      # 连接池最大连接数，默认是10
      maximum-pool-size: 10
      # 此属性控制从池返回的连接的默认自动提交行为,默认值：true
      auto-commit: on
      # 此属性控制池中连接的最长生命周期，值0表示无限生命周期，默认1800000即30分钟
      max-lifetime: 1800000
      # 数据库连接超时时间,默认30秒，即30000
      connection-timeout: 30000
      # 用来检测连接是否有效的sql，要求是一个查询语句
      connection-test-query: SELECT 1
  # JPA配置
  jpa:
    # 数据库方言
    database-platform: org.hibernate.dialect.MySQL5Dialect
    # 项目启动时是否执行ddl
    generate-ddl: on
    # 是否显示sql
    show-sql: on
    # 设置数据库类型
    database: mysql
    hibernate:
      # 自动建表
      ddl-auto: update
    properties:
      hibernate:
        # sql格式
        format_sql: true

# 文件上传路径，根据实际情况调整
upload:
  tmp: C:\tmp\
  path: C:\upload\

# GeoLite2 数据库目标路径
geolite2:
  city:
    db:
      path: C:\geolite2_db\GeoLite2-City.mmdb