# 通过后续了解，SpringCloudConfig和 NacosConfig这种统一配置服务在springboot项目中初始化时，
# 都是加载bootstrap.properties配置文件去初始化上下文。
# 这是由spring boot的加载属性文件的优先级决定的，想要在加载属性之前去config server上取配置文件，
# 那NacosConfig或SpringCloudConfig相关配置就是需要最先加载的，而bootstrap.properties的加载是先于application.properties的，
# 所以config client要配置config的相关配置就只能写到bootstrap.properties里了
# spring 配置
spring.application.name=thirteen-authorization
# 允许bean definition被覆盖，即允许刷新bean definition
spring.main.allow-bean-definition-overriding=true
# Hikari数据源默认不支持运行时刷新，此处将DataSource类配置为额外的可运行时刷新的类
spring.cloud.refresh.extra-refreshable=javax.sql.DataSource
# spring cloud nacos配置中心服务器地址
spring.cloud.nacos.config.server-addr=122.152.221.117:8848
# spring cloud nacos配置中心管理的配置文件类型
spring.cloud.nacos.config.file-extension=yaml
# namespace可直接指定具体配置。
# 不使用namespace时，默认按照Data Id匹配（${spring.cloud.nacos.config.prefix}-${spring.profile.active}.${spring.cloud.nacos.config.file-extension}）
# spring.cloud.nacos.config.namespace=6d97697a8889c67c0d8877ed8d8aaf31
# 环境配置 dev（开发环境） test（测试环境） prod（生产环境）
spring.profiles.active=@profile.active@
